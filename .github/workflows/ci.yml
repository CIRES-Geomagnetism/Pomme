name: Pomme ci pipeline

on:
  push:
    branches: ['*']

jobs:
  tests:
    name: Run Tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ "ubuntu-latest", "windows-latest" ]


    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    -  name: Install dependencies
       run: |
         pip install -r requirements.txt

    - name: Build and install Pomme Python wrapper
      run: |
        python -m build
        pip install -e .

    - name: Unit tests
      run: |
        py.test

  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: pip install cibuildwheel

      - name: Build wheels
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            cibuildwheel --platform windows --output-dir wheelhouse
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            # For macOS, we need to set the CIBW_ARCHS_MACOS environment variable
            CIBW_ARCHS_MACOS=universal2  # Optional: support both Intel and M1 macOS \
            cibuildwheel --platform macos --output-dir wheelhouse
          elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            
            CIBW_ARCHS_LINUX=x86_64 \
            CIBW_MANYLINUX_X86_64_IMAGE=manylinux2014 # Be compatible to run in RHEL 7 which has older version of glibc \
            cibuildwheel --platform linux --output-dir wheelhouse
          fi


      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: wheelhouse/

  release:
    name: Create Github Release
    runs-on: ubuntu-latest
    needs: build_wheels

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: wheelhouse


      - name: Upload wheels to Github Release
        uses: softprops/action-gh-release@v1

        with:
          files: wheelhouse/*.whl
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


